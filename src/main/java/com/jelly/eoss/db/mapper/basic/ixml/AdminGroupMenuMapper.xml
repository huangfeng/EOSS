<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- author:Collonn, Email:collonn@126.com, QQ:195358385 -->


<mapper namespace="com.jelly.eoss.db.mapper.basic.iface.AdminGroupMenuMapper">
    <!-- 生成Insert -->
        	<insert id="insert" useGeneratedKeys="true" keyProperty="group_id" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu">
    insert into admin_group_menu (
    <trim suffixOverrides=",">
                            <if test="groupId != null">
                                group_id,
                            </if>

                            <if test="menuId != null">
                                menu_id,
                            </if>

    </trim>
    ) values (
    <trim suffixOverrides=",">
                            <if test="groupId != null">
                                #{groupId},
                            </if>
                            <if test="menuId != null">
                                #{menuId},
                            </if>
    </trim>
    )
</insert>

    <!-- 生成Update -->
    <!-- 注意调用该SQL前必须检查参数的正确性，否则可能会误更新 -->
	<update id="update" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu">
        update admin_group_menu set
        <trim suffixOverrides=",">
                    <if test="groupId != null">
                        group_id = #{groupId},
                    </if>
                    <if test="menuId != null">
                        menu_id = #{menuId},
                    </if>
        </trim>
        where
                <if test="groupId != null">
                    group_id = #{groupId}
                </if>
            
    </update>

    <!-- 生成UpdateWithNull -->
    <!-- 注意调用该SQL前必须先根据主键查询出该记录所有列数据，再设置某列为null -->
    <update id="updateWithNull" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu">
        update admin_group_menu set
        <trim suffixOverrides=",">
            group_id = #{groupId},
            menu_id = #{menuId},
        </trim>
        where
            group_id = #{groupId}
            
    </update>

    <!-- 根据表的主键生成Delete -->
		<delete id="deleteByPk" parameterType="java.io.Serializable">
			
            delete
            from admin_group_menu
            where
                group_id = #{groupId}
                
        </delete>
    <!-- 注意调用该SQL前必须检查参数的正确性，否则可能会误删除 -->
    <delete id="delete" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu">
        <!-- 请注意，该表没有主键 -->
        delete
        from admin_group_menu
        where
        <trim suffixOverrides="and">
                <if test="groupId != null">
                    group_id = #{groupId} and
                </if>
                <if test="menuId != null">
                    menu_id = #{menuId} and
                </if>
        </trim>
    </delete>

    <!-- 生成Select通用表头 -->
    <sql id="selectColumns">
        <trim suffixOverrides=",">
                group_id as "groupId",
                menu_id as "menuId",
        </trim>
    </sql>

    <!-- 生成Select通用查询条件 -->
    <sql id="selectWheres">
                <if test="groupId != null">
                    and group_id = #{groupId}
                </if>
                <if test="menuId != null">
                    and menu_id = #{menuId}
                </if>
    </sql>

    <sql id="selectOrderBy">
        <if test="sortConditionSet != null and sortConditionSet.size() > 0">
            order by
            <trim suffixOverrides=",">
                <foreach collection="sortConditionSet" item="item">
                ${item.colName} ${item.sort},
                </foreach>
            </trim>
        </if>
    </sql>

    <!-- 生成Select -->
    <select id="select" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu" resultType="com.jelly.eoss.db.entity.AdminGroupMenu">
        select
        <include refid="selectColumns"/>
        from admin_group_menu
        where 1 = 1
        <include refid="selectWheres"/>
        <include refid="selectOrderBy"/>
    </select>

    <!-- 生成Select -->
    <select id="selectPage" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu" resultType="com.jelly.eoss.db.entity.AdminGroupMenu">
        select
        <include refid="selectColumns"/>
        from admin_group_menu
        where 1 = 1
        <include refid="selectWheres"/>
        <include refid="selectOrderBy"/>
        limit #{offset},#{length}
    </select>

    <!-- 生成SelectCount -->
    <select id="selectCount" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu" resultType="Integer">
        select count(*) ct
        from admin_group_menu
        <where>
            <include refid="selectWheres"/>
        </where>
    </select>

    <!-- 根据表的主键生成SelectByPk，该表只有单列主键 -->
	<select id="selectByPk" parameterType="java.io.Serializable" resultType="com.jelly.eoss.db.entity.AdminGroupMenu">
        select
        <include refid="selectColumns"/>
        from admin_group_menu
        where
            group_id = #{groupId}
            
    </select>

    <select id="selectOne" parameterType="com.jelly.eoss.db.entity.AdminGroupMenu" resultType="com.jelly.eoss.db.entity.AdminGroupMenu">
        select
        <include refid="selectColumns"/>
        from admin_group_menu
        where 1 = 1
        <include refid="selectWheres"/>
        limit 1
    </select>

    <select id="selectAll" resultType="com.jelly.eoss.db.entity.AdminGroupMenu">
        select
        <include refid="selectColumns"/>
        from admin_group_menu
    </select>
</mapper>